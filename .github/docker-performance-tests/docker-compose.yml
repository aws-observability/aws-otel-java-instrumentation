version: "3.7"
services:
  otel:
    image: otel/opentelemetry-collector-contrib:latest
    command: --config /otel-collector/collector-config.yml
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_DEFAULT_REGION
      - TARGET_SHA
      - GITHUB_RUN_ID
      - HOSTMETRICS_INTERVAL_SECS
      - LOG_GROUP_NAME
      - LOGS_NAMESPACE
      - MATRIX_COMMIT_COMBO
      - APP_PROCESS_COMMAND_LINE_DIMENSION_VALUE
      - APP_PROCESS_EXECUTABLE_NAME
    volumes:
      - ./otel-collector:/otel-collector
      - type: bind
        source: /proc
        target: /proc
    ports:
      - '4317:4317'
    user: "${UID}:${GID}"

  app:
    build:
      context: ../../${APP_PATH}
    environment:
      - INSTANCE_ID
      - LISTEN_ADDRESS=0.0.0.0:${LISTEN_ADDRESS_PORT}
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_DEFAULT_REGION
      - SAMPLE_APP_LOG_LEVEL=ERROR
      - OTEL_RESOURCE_ATTRIBUTES=service.name=aws-otel-integ-test
      - OTEL_EXPORTER_OTLP_ENDPOINT=grpc://otel:4317
    ports:
      - '${LISTEN_ADDRESS_PORT}:${LISTEN_ADDRESS_PORT}'

  load-generator:
    build:
      context: ./load-generator
    environment:
      - TARGET_ADDRESS=app:${LISTEN_ADDRESS_PORT}
      - TEST_DURATION_MINUTES
    depends_on:
      - otel
      - app

  alarms-poller:
    build:
      context: ./alarms-poller
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_SESSION_TOKEN
      - AWS_DEFAULT_REGION
      - HOSTMETRICS_INTERVAL_SECS
      - NUM_OF_CPUS
      - TARGET_SHA
      - LOGS_NAMESPACE
      - APP_PROCESS_COMMAND_LINE_DIMENSION_VALUE
      - CPU_LOAD_THRESHOLD
      - TOTAL_MEMORY_THRESHOLD
      - GITHUB_RUN_ID
      - MATRIX_COMMIT_COMBO
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - load-generator
