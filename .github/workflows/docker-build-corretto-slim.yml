on:
  push:
    branches:
      - main
    paths:
      - scripts/docker/corretto-slim/**
      - .github/workflows/docker-build-corretto-slim.yml

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_WEB_IDENTITY_TOKEN_FILE: /tmp/awscreds

permissions:
  id-token: write
  contents: read

jobs:
  build-corretto:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

      - run: sleep 5 # there's still a race condition for now
      - name: Configure AWS Credentials
        run: |
          export AWS_ROLE_ARN=${{ secrets.AWS_ASSUME_ROLE_ARN }}
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV

          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sigstore" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE
      - name: Login to ECR
        run: aws ecr-public get-login-password | docker login --username AWS --password-stdin public.ecr.aws

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: scripts/docker/corretto-slim
          tags: |
            public.ecr.aws/u0d6r4y4/amazoncorretto-distroless:alpha
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
