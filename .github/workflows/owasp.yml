
name: Daily scan for dependencies
on:
  schedule:
    - cron: "22 3 * * *"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  check-dependencies-adot-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Configure AWS credentials for dependency scan
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SECRET_MANAGER_ROLE_ARN }}
          aws-region: us-east-1
      - name: Get NVD API key for dependency scan
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        id: nvd_api_key
        with:
          secret-ids: ${{ secrets.NVD_API_KEY_SECRET_ARN }}
          parse-json-secrets: true
      - name: Build snapshot with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: ":otelagent:dependencyCheckAnalyze --scan"
        env:
            NVD_API_KEY: ${{ env.NVD_API_KEY_NVD_API_KEY }}
      - name: Upload report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: adot-dependencies
          path: otelagent/build/reports

  check-dependencies-otel-java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "open-telemetry/opentelemetry-java-instrumentation"
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Configure AWS credentials for dependency scan
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SECRET_MANAGER_ROLE_ARN }}
          aws-region: us-east-1
      - name: Get NVD API key for dependency scan
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        id: nvd_api_key
        with:
          secret-ids: ${{ secrets.NVD_API_KEY_SECRET_ARN }}
          parse-json-secrets: true
      - name: Build snapshot with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: ":javaagent:dependencyCheckAnalyze"
        env:
            NVD_API_KEY: ${{ env.NVD_API_KEY_NVD_API_KEY }}
      - name: Upload report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: otel-dependencies
          path: javaagent/build/reports

  publish-status:
    needs: ["check-dependencies-adot-java", "check-dependencies-otel-java"]
    if: ${{ always() }}
    uses: ./.github/workflows/publish-status.yml
    with:
      namespace: 'ADOT/GitHubActions'
      repository: ${{ github.repository }}
      branch: ${{ github.ref_name }}
      workflow: owasp
      success: ${{ needs.check-dependencies-adot-java.result == 'success' &&
                   needs.check-dependencies-otel-java.result == 'success'}}
      region: us-east-1
    secrets:
      roleArn: ${{ secrets.METRICS_ROLE_ARN }}

