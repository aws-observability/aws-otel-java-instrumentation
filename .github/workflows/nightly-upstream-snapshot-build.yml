on:
  schedule:
    - cron: "21 3 * * *"
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_WEB_IDENTITY_TOKEN_FILE: /tmp/awscreds

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - uses: gradle/wrapper-validation-action@v1

      - run: sleep 5 # there's still a race condition for now
      - name: Configure AWS Credentials
        run: |
          export AWS_ROLE_ARN=${{ secrets.AWS_ASSUME_ROLE_ARN }}
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV

          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sigstore" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE
      - name: Login to ECR
        run: aws ecr-public get-login-password | docker login --username AWS --password-stdin public.ecr.aws

      - name: Build snapshot with Gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: build --stacktrace -PenableCoverage=true -PtestUpstreamSnapshots=true
        env:
          PUBLISH_USERNAME: ${{ secrets.PUBLISH_USERNAME }}
          PUBLISH_PASSWORD: ${{ secrets.PUBLISH_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Upload to GitHub Actions
        uses: actions/upload-artifact@v2
        with:
          name: aws-opentelemetry-agent.jar
          path: otelagent/build/libs/aws-opentelemetry-agent-*.jar
