name: Release Build
on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to tag the release with, e.g., 1.2.0, 1.2.1-alpha.1
        required: true

env:
  AWS_DEFAULT_REGION: us-east-1

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: gradle/wrapper-validation-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Log in to AWS ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws

      - name: Build release with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build jib final closeAndReleaseSonatypeStagingRepository -Prelease.version=${{ github.event.inputs.version }} --stacktrace
        env:
          PUBLISH_USERNAME: ${{ secrets.PUBLISH_USERNAME }}
          PUBLISH_PASSWORD: ${{ secrets.PUBLISH_PASSWORD }}
          GRGIT_USER: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_HASH: ${{ github.event.inputs.version }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: otelagent/build/libs/aws-opentelemetry-agent-${{ github.event.inputs.version }}.jar
          asset_name: aws-opentelemetry-agent.jar
          asset_content_type: application/java-archive
