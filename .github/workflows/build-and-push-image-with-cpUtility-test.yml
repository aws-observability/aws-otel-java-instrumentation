name: Build and Push Java-Agent Image after CPUtility Test # non-Appsignals Testing
on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      image_uri_with_tag:
        required: true
        type: string
      image_registry:
        required: true
        type: string
      adot-java-version:
        required: true
        type: string

env:
  AWS_DEFAULT_REGION: ${{ inputs.aws-region }}

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.JAVA_INSTRUMENTATION_SNAPSHOT_ECR }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to private staging ecr
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.image_registry }}
        env:
          AWS_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: Build image for testing
        uses: docker/build-push-action@v5
        with:
          push: false
          build-args: "ADOT_JAVA_VERSION=${{ inputs.adot-java-version }}"
          context: .
          platforms: linux/amd64
          tags: ${{ inputs.image_uri_with_tag }}
          load: true

      - name: Test docker image
        shell: bash
        run: .github/scripts/test-adot-javaagent-image.sh "${{ inputs.image_uri_with_tag }}" "${{ inputs.adot-java-version }}"

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          push: true
          build-args: "ADOT_JAVA_VERSION=${{ inputs.adot-java-version }}"
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ inputs.image_uri_with_tag }}