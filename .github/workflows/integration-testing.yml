name: Integration Testing
on: push

jobs:
  build_Apps_With_Java_Agent:
    name: Build AWS OTel Java agent
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradle
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: build jibDockerBuild
        env:
          AWS_REGISTRY_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          COMMIT_HASH: ${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker images
          docker push $ECR_REGISTRY/otel-test/springboot:${{ github.sha }}
          docker push $ECR_REGISTRY/otel-test/spark:${{ github.sha }}

  test_Spring_App_With_Java_Agent:
    name: Test Spring App with AWS OTel Java agent
    needs: build_Apps_With_Java_Agent
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup and Run OTel Collector
        run: |
          docker-compose -f .github/collector/docker-compose.yml up &
        env:
          ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run Springboot App with Java agent
        run: |
          docker run -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e AWS_REGION=us-west-2 -e INSTANCE_ID=${{ github.run_id }}-${{ github.run_number }} -e LISTEN_ADDRESS=0.0.0.0:8080 -e OTEL_EXPORTER_OTLP_ENDPOINT=172.17.0.1:55680  -p 8080:8080 ${{ steps.login-ecr.outputs.registry }}/otel-test/springboot:${{ github.sha }} &

      - name: Directory to checkout test framework
        run: mkdir test-framework

      - name: Checkout test framework
        uses: actions/checkout@v2
        with:
          repository: aws-observability/aws-otel-test-framework
          ref: terraform
          path: test-framework

      - name: Run testing suite
        run: ./gradlew :validator:run --args='-c default-otel-trace-metric-validation.yml --endpoint http://127.0.0.1:8080 --metric-namespace default -t ${{ github.run_id }}-${{ github.run_number }}'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
        working-directory: test-framework

  test_Spark_App_With_Java_Agent:
    name: Test Spark App with AWS OTel Java agent
    needs: build_Apps_With_Java_Agent
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup and Run OTel Collector
        run: |
          docker-compose -f .github/collector/docker-compose.yml up &
        env:
          ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run Spark App with Java agent
        run: |
          docker run -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e AWS_REGION=us-west-2 -e INSTANCE_ID=${{ github.run_id }}-${{ github.run_number }} -e LISTEN_ADDRESS=0.0.0.0:4567 -e OTEL_EXPORTER_OTLP_ENDPOINT=172.17.0.1:55680 -e OTEL_RESOURCE_ATTRIBUTES="service.name=aws-otel-integ-test" -p 4567:4567 ${{ steps.login-ecr.outputs.registry }}/otel-test/spark:${{ github.sha }} &

      - name: Directory to checkout test framework
        run: mkdir test-framework

      - name: Checkout test framework
        uses: actions/checkout@v2
        with:
          repository: aws-observability/aws-otel-test-framework
          ref: terraform
          path: test-framework

      - name: Run testing suite
        run: ./gradlew :validator:run --args='-c spark-otel-trace-metric-validation.yml --endpoint http://127.0.0.1:4567 --metric-namespace aws-otel-integ-test -t ${{ github.run_id }}-${{ github.run_number }}'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
        working-directory: test-framework
